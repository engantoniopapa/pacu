#include "header.h"


void bootstrap();

int main(int argc, char *argv[])
{


	bootstrap();
  return 0;
}


void bootstrap()
{
	//DB *db_server;
	//db_server = ( DB *) malloc (sizeof(DB) ) ;
	

	port_client =  ( in_port_t *) malloc (sizeof(in_port_t )); // porta per la comunicazione client - server
	port_am =  ( in_port_t *) malloc (sizeof(in_port_t )); // porta per la comunicazione client - server

	get_conf(/*db_server*/);
	



	sem_accept =  make_semaphore(1) ;	// mutex per il lock sull'accept	
	sem_exit_disp = make_semaphore (0); // inizializzazione signal per la terminazione del dispatcher_serverboot
	exit_helper = 0;// inizializzazione varibile per segnalare l'uscita agli helper del disptacher boot
	mux_exit_helper = make_semaphore (1);// inizializzazione mutex per l'accesso alla varibile exit_hboot


	pthread_t dispatcher;

	int rc ;

	printf("Fine bootstrap, avvio disptacher \n");
	rc = pthread_create (&dispatcher, NULL, func_dispatcher_DNS, (void *)NULL);
	if (rc)
	{
   	printf("ERROR; return code from pthread_create() is %d\n",rc);
   	exit(-1);
	}

	sleep(20);  //prova per la terminazione

			// signal di terminazione ai dispatcher
		sem_post(sem_exit_disp);


		pthread_join(dispatcher, NULL );

	//free(db_server);
		//free_all();
		
}

	
